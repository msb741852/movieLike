<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.movielike.app.dao.movieMapper">
<!-- 키워드 찾기 무비 리스트 출력 -->
    <select id="selectKeyword" parameterType="movieDto" resultType="movieDto">
        select * from movie
            where true
            <if test="ottName != '' and ottName != null">
                and ottName REGEXP #{ottName}
            </if>
            <if test="genrName != '' and genrName != null">
                and genrName REGEXP #{genrName}
            </if>
            <if test="rvScoreCnt != '' and rvScoreCnt != null">
                and rvScoreCnt >= #{rvScoreCnt}
            </if>
            <if test="rvScore != '' and rvScore != null">
                and rvScore >= #{rvScore}
            </if>

        select DISTINCT m.movId, m.movName, m.movNameEng, m.movDate, m.movTime, m.movPoster, p.perName, mp.perJob, c.cName, o.ottName, g.genrName
            from movie m, person p, moviePerson mp, country c, ott o, movieOtt mo, review r, genre g, movieGenre mg
            where ((mp.movId = m.movId and mp.perId = p.perId)
                    and (c.movId = m.movId)
                    and (mo.movId = m.movId and o.ottId = mo.ottId)
                    and (mg.movId = m.movId and mg.genrId = g.genrId))
                and (g.genrName REGEXP #{genrName})
                and (o.ottName REGEXP #{ottName})
            <if test="ottName != '' and ottName != null">
                and ottName REGEXP #{ottName}
            </if>
            <if test="genrName != '' and genrName != null">
                and genrName REGEXP #{genrName}
            </if>
            <if test="rvScoreCnt != 0 and rvScoreCnt != null">
                and rvScoreCnt >= #{rvScoreCnt}
            </if>
            <if test="rvScore != 0 and rvScore != null">
                and (rvScore / movScoreCnt) >= #{rvScoreCnt}
            </if>
    </select>

<!-- 메인페이지 검색바로 검색 - 영화이름 -->
    <select id="selectSearchMov" parameterType="String" resultType="movieDto">
        select m.movId, m.movName, p.perName, mp.perJob
            from movie m, person p, moviePerson mp
            where ((m.movId = mp.movId) and (mp.perId = p.perId))
                and (m.movName like concat('%',#{search},'%')
                or p.perName like concat('%',#{search},'%');
    </select>
</mapper>



















